make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 3.81
# Copyright (C) 2006  Free Software Foundation, Inc.
# This is free software; see the source for copying conditions.
# There is NO warranty; not even for MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

# This program built for i386-apple-darwin11.3.0

# Make data base, printed on Wed Jun  8 12:06:26 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# environment
RUBY_VERSION = ruby-3.0.0
# automatic
?F = $(notdir $?)
# environment
PROVIDE_FULLSTACK_ACTION = true
# environment
VSCODE_LOG_NATIVE = false
# environment
NVM_INC = /Users/arsalan/.nvm/versions/node/v14.19.3/include/node
# automatic
?D = $(patsubst %/,%,$(dir $?))
# environment
rvm_path = /Users/arsalan/.rvm
# makefile (from `Makefile', line 3)
PROJECT_DIR = $(PWD)
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /Users/arsalan/Work/PackformTask/entireProject/minnie-test
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"en-gb","availableLanguages":{},"_languagePackSupport":true}
# environment
_ = /usr/bin/make
# makefile (from `Makefile', line 1)
MAKEFILE_LIST :=  Makefile
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# makefile (from `Makefile', line 9)
BACKEND_BUILD_DIR = $(BACK_END_DIR)/build/
# environment
VSCODE_VERBOSE_LOGGING = true
# environment
__CFBundleIdentifier = com.microsoft.VSCode
# environment
INFOPATH = /opt/homebrew/share/info:
# environment
VSCODE_IPC_HOOK_EXTHOST = /var/folders/y9/0m25jkfn4bn25mcmyt0x9ssc0000gn/T/vscode-ipc-0b08c55a-5a15-4e51-9141-11de53b1847a.sock
# environment
VSCODE_CWD = /
# environment
GOPROXY = https://proxy.golang.org,direct
# environment
PATH = /Users/arsalan/.rvm/gems/ruby-3.0.0/bin:/Users/arsalan/.rvm/gems/ruby-3.0.0@global/bin:/Users/arsalan/.rvm/rubies/ruby-3.0.0/bin:/Applications/Postgres.app/Contents/Versions/14/bin:/Users/arsalan/.nvm/versions/node/v14.19.3/bin:/Users/arsalan/.pyenv/shims:/Library/Frameworks/Python.framework/Versions/3.10/bin:/opt/homebrew/bin:/opt/homebrew/sbin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/go/bin:~/.dotnet/tools:/Library/Apple/usr/bin:/Users/arsalan/Library/Android/sdk/emulator:/Users/arsalan/Library/Android/sdk/platform-tools:/Applications/Visual Studio Code.app/Contents/Resources/app/bin:/Users/arsalan/.rvm/bin:/Applications/Postgres.app/Contents/Versions/14/bin/
# environment
GOLANG_EXECUTABLE = go
# makefile (from `Makefile', line 6)
MIGRATIONS_FOLDER = $(PWD)/minnie-test-import-data-script
# environment
THREE_SCALE_USER_TOKEN = 207c527cfc2a6b8dcf4fa43ad7a976da
# environment
GOPATH = /Users/arsalan/go
# environment
NVM_BIN = /Users/arsalan/.nvm/versions/node/v14.19.3/bin
# environment
VSCODE_LOG_STACK = false
# environment
ELECTRON_RUN_AS_NODE = 1
# default
.FEATURES := target-specific order-only second-expansion else-if archives jobserver check-symlink
# environment
UUID = e36b75bd-3dc0-48d9-a649-9f16f981bedd
# environment
SSH_AUTH_SOCK = /private/tmp/com.apple.launchd.3THhgJSBvQ/Listeners
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# environment
rvm_bin_path = /Users/arsalan/.rvm/bin
# environment
PWD = /Users/arsalan/Work/PackformTask/entireProject/minnie-test
# environment
HOMEBREW_CELLAR = /opt/homebrew/Cellar
# environment
GEM_HOME = /Users/arsalan/.rvm/gems/ruby-3.0.0
# environment
ORIGINAL_XDG_CURRENT_DESKTOP = undefined
# environment
MANPATH = /Users/arsalan/.nvm/versions/node/v14.19.3/share/man:/opt/homebrew/share/man::
# environment
GOMODCACHE = /Users/arsalan/go/pkg/mod
# environment
HOME = /Users/arsalan
# default
MAKEFILEPATH := /Applications/Xcode.app/Contents/Developer/Makefiles
# environment
VSCODE_CODE_CACHE_PATH = /Users/arsalan/Library/Application Support/Code/CachedData/c3511e6c69bb39013c4a4b7b9566ec1ca73fc4d5
# environment
LOGNAME = arsalan
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# environment
NVM_CD_FLAGS = -q
# environment
TELEMETRY_ID = a4aa3ac6-8eab-4613-b426-dbc7b93fb2dd
# makefile (from `Makefile', line 4)
FRONT_END_DIR = $(PROJECT_DIR)/minnie-test-frontend
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
GEM_PATH = /Users/arsalan/.rvm/gems/ruby-3.0.0:/Users/arsalan/.rvm/gems/ruby-3.0.0@global
# environment
XPC_FLAGS = 0x0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
IRBRC = /Users/arsalan/.rvm/rubies/ruby-3.0.0/.irbrc
# environment
SHLVL = 1
# default
MAKE_VERSION := 3.81
# environment
USER = arsalan
# makefile
.DEFAULT_GOAL := all
# environment
rvm_version = 1.29.12 (latest)
# automatic
%D = $(patsubst %/,%,$(dir $%))
# default
MAKE_COMMAND := /Applications/Xcode.app/Contents/Developer/usr/bin/make
# environment
UTM_SOURCE = vscode
# makefile (from `Makefile', line 5)
BACK_END_DIR = $(PROJECT_DIR)/minnie-test-backend
# default
.VARIABLES := 
# environment
TMPDIR = /var/folders/y9/0m25jkfn4bn25mcmyt0x9ssc0000gn/T/
# automatic
*F = $(notdir $*)
# environment
VSCODE_IPC_HOOK = /Users/arsalan/Library/Application Support/Code/1.67.2-main.sock
# makefile
MAKEFLAGS = Rrqp
# environment
MFLAGS = -Rrqp
# automatic
*D = $(patsubst %/,%,$(dir $*))
# environment
NVM_DIR = /Users/arsalan/.nvm
# environment
XPC_SERVICE_NAME = application.com.microsoft.VSCode.5042771.5042777
# environment
HOMEBREW_PREFIX = /opt/homebrew
# automatic
+D = $(patsubst %/,%,$(dir $+))
# environment
RECOMMENDER_API_URL = https://gw.api.openshift.io//api/v2
# automatic
+F = $(notdir $+)
# makefile (from `Makefile', line 8)
APP_NAME = packform-rest-api
# environment
HOMEBREW_REPOSITORY = /opt/homebrew
# environment
__CF_USER_TEXT_ENCODING = 0x1F5:0x0:0x0
# environment
COMMAND_MODE = unix2003
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
ANDROID_SDK_ROOT = /Users/arsalan/Library/Android/sdk
# environment
LC_ALL = C
# automatic
^F = $(notdir $^)
# environment
rvm_prefix = /Users/arsalan
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/local/include
# environment
MAKELEVEL := 0
# environment
LANG = C
# environment
VSCODE_PID = 20616
# environment
MY_RUBY_HOME = /Users/arsalan/.rvm/rubies/ruby-3.0.0
# variable set hash-table stats:
# Load=97/1024=9%, Rehash=0, Collisions=4/133=3%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 16777232, inode 9810417): 14 files, no impossibilities.

# 14 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

all: copy-dotenv-to-all-packages create-db-and-import-data install-backend-packages install-frontend-packages run-backend-tests run-frontent-tests indicate-run-commands
#  Phony target (prerequisite of .PHONY).
#  Command-line target.
#  Implicit rule search has not been done.
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/12=0%

.PHONY: all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
.SUFFIXES:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-06-07 15:11:33
#  File has been updated.
#  Successfully updated.
# variable set hash-table stats:
# Load=0/32=0%, Rehash=0, Collisions=0/0=0%

copy-dotenv-to-all-packages:
#  Implicit rule search has not been done.
#  Implicit/static pattern stem: `'
#  File does not exist.
#  File has been updated.
#  Needs to be updated (-q is set).
# automatic
# @ := copy-dotenv-to-all-packages
# automatic
# % := 
# automatic
# * := 
# automatic
# + := 
# automatic
# | := 
# automatic
# < := 
# automatic
# ^ := 
# automatic
# ? := 
# variable set hash-table stats:
# Load=8/32=25%, Rehash=0, Collisions=3/20=15%
#  commands to execute (from `Makefile', line 17):
 
	echo "\n\nCAREFULL!!!\n\nAssuming .env is having all environment variables set, using it for migrations and running servers\n\n"  &&  rm -rf $(MIGRATIONS_FOLDER)/.env  $(BACK_END_DIR)/.env && cp -r .env $(MIGRATIONS_FOLDER)/ && cp -r .env $(BACK_END_DIR)/
	

run-fresh-build: copy-dotenv-to-all-packages clean-previous-builds generate-builds run-both-builds
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-backend:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 41):
	# cd $(BACK_END_DIR) && CGO_ENABLED=0 go build -ldflags="-w -s" -o ./build/$(APP_NAME) main.go
	

install-backend-packages:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 23):
	cd $(BACK_END_DIR) && go get -d ./...
	

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

build-frontend:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 35):
	cd $(FRONT_END_DIR) && npm run build
	

clean-previous-builds:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 51):
	rm -rf $(BACK_END_DIR)/frontend/* && rm -rf $(BACKEND_BUILD_DIR)/* && rm -rf $(FRONT_END_DIR)/dist/*
	

install-frontend-packages:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 26):
	cd $(FRONT_END_DIR) && rm -rf node_modules && npm install
	

run-backend-tests:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

generate-builds: build-frontend copy-frontend-build build-backend
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

create-db-and-import-data:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 20):
	cd $(MIGRATIONS_FOLDER) && go get -d ./... && go run .
	

run-frontent-tests:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

indicate-run-commands:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 48):
	echo "\n\nNow generate and run fresh builds for both frontend and backend by \nmake run-fresh-build\n"
	

run-both-builds:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 44):
	cd $(BACK_END_DIR) && go run main.go
	# $(BACKEND_BUILD_DIR)/$(APP_NAME)
	

run-backend:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 29):
	cd $(BACK_END_DIR) && rm -rf server && go build -o server main.go && ./server
	

copy-frontend-build:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 38):
	cd $(BACK_END_DIR) && cp -r $(FRONT_END_DIR)/dist/* ./frontend/
	

run-frontend:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  commands to execute (from `Makefile', line 32):
	cd $(FRONT_END_DIR) && npm run serve
	

# files hash-table stats:
# Load=21/1024=2%, Rehash=0, Collisions=3/50=6%
# VPATH Search Paths

# No `vpath' search paths.

# No general (`VPATH' variable) search path.

# # of strings in strcache: 1
# # of strcache buffers: 1
# strcache size: total = 4096 / max = 4096 / min = 4096 / avg = 4096
# strcache free: total = 4087 / max = 4087 / min = 4087 / avg = 4087

# Finished Make data base on Wed Jun  8 12:06:26 2022

 
